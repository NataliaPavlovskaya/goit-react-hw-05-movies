{"version":3,"file":"static/js/MoviesPage.16c96110.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.js","components/TrendingMovies/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.js","pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__1wPIF\"};","import styles from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={styles.title}>{text}</h1>;\n}","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies, prevLocation }) => {\n  // const location = useLocation();\n  // console.log(location.pathname);\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n              {/* <Link to={`/movies/${id}`} state={{ from: location.pathname }}> */}\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  // prevLocation: PropTypes.object.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"SearchForm_SearchForm__jbIQn\",\"SearchForm-button\":\"SearchForm_SearchForm-button__IrjWW\",\"SearchForm-button-label\":\"SearchForm_SearchForm-button-label__xPh3F\",\"SearchForm-input\":\"SearchForm_SearchForm-input__v5K3g\"};","import { useState } from 'react';\n\n// import { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nimport styles from './SearchForm.module.css';\n// import {ToastContainer, toast } from 'react-toastify';\n\nconst SearchFrom = ({onSearch}) => {\n  const [query, setQuery] = useState('');\n\n  const handleSearchInput = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    // Запрещает отправку пустого инпута\n    if (!query.trim()) return;\n\n    // Отдать данные внешнему компоненту\n    onSearch(query);\n\n    resetForm();\n  };\n \n\n// Сбрасывает поле отправки\n  const resetForm = () => setQuery('');\n  \n  return (\n  <form className={styles.SearchForm} onSubmit={handleFormSubmit}>\n    <input\n      className={styles['SearchForm-input']}\n      type=\"text\"\n      name=\"query\"\n      value={query}\n      onChange={handleSearchInput}\n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Enter movie name..\"\n    />\n    <button type=\"submit\" className={styles.button}>\n        Search\n      </button>\n  </form>);\n};\n\nSearchFrom.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchFrom;","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/SearchForm/SearchForm';\nimport { fetchByQuery } from 'services/api';\nimport MovieList from 'components/TrendingMovies/MovieList';\nimport PageHeading from 'components/PageHeading/PageHeading';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n\n    const fetchMovie = () => {\n      setLoading(true);\n      fetchByQuery(searchRequest)\n        .then(results => {\n          if (!results.length) {\n            alert('No movies found!');\n          }\n\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(setLoading(false));\n    };\n    fetchMovie();\n  }, [searchRequest]);\n\n  // onSubmit\n  function onSubmit(value) {\n    setSearchParams({ query: `${value}` });\n  }\n\n  return (\n    <>\n        <PageHeading text={'Movie Search'} />\n        {/* <h1>Movies search</h1> */}\n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n\n        <SearchBar onSearch={onSubmit} />\n        {movies && <MovieList movies={movies} prevLocation={location} />}\n    </>\n  );\n};\n\nexport default MoviesPage;","import axios from 'axios';\n\n\nconst API_KEY = 'd2088e493093cc1b7e7b50d5b735bf4d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  // console.log(res.data.results);\n  return res.data.results;\n};\n\n//  https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n\n"],"names":["PageHeading","text","className","styles","movies","prevLocation","map","id","original_title","to","state","from","onSearch","useState","query","setQuery","resetForm","onSubmit","e","preventDefault","trim","type","name","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","fetchByQuery","then","results","length","alert","catch","console","log","finally","MovieList","API_KEY","axios","END_POINTS","getMovies","page","res","data","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}